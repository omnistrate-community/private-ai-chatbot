# Install dependencies only when needed
FROM node:18-alpine AS deps
WORKDIR /app

# Copy package files and install dependencies
COPY package.json package-lock.json* ./
RUN npm ci

# Rebuild the source code only when needed
FROM node:18-alpine AS builder
WORKDIR /app

# Copy all files
COPY . .
# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Build the Next.js application
ENV NEXT_TELEMETRY_DISABLED 1
RUN npm run build

# Production image, copy necessary files and run next
FROM node:18-alpine AS runner
WORKDIR /app

# Set to production environment
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Install necessary system dependencies
RUN apk update && \
    apk add --no-cache ca-certificates && \
    update-ca-certificates

# Create a non-root user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy only necessary files from the builder stage
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Add next.config.js for static file serving
COPY --from=builder --chown=nextjs:nodejs /app/next.config.mjs ./

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Set hostname to listen on all interfaces
ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# Run the Next.js application
CMD ["node", "server.js"]

LABEL org.opencontainers.image.source="https://github.com/omnistrate-community/ai-chatbot"